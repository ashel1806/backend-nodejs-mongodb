"use strict";(self.webpackChunkaprendiendo_js=self.webpackChunkaprendiendo_js||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Backend NodeJS y MongoDB","href":"/backend-nodejs-mongodb/","className":"hidden","docId":"intro"},{"type":"link","label":"Herramientas","href":"/backend-nodejs-mongodb/tools","docId":"tools"},{"type":"category","label":"Modulo 01","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introducci\xf3n a Javascript","href":"/backend-nodejs-mongodb/introduction-js","docId":"modulo01/index"},{"type":"link","label":"Variables","href":"/backend-nodejs-mongodb/variables","docId":"modulo01/variables"},{"type":"link","label":"Tipos de datos","href":"/backend-nodejs-mongodb/data-types","docId":"modulo01/data-types"},{"type":"link","label":"Funciones","href":"/backend-nodejs-mongodb/functions","docId":"modulo01/functions"},{"type":"link","label":"Operadores","href":"/backend-nodejs-mongodb/operators","docId":"modulo01/operators"},{"type":"link","label":"Estructuras de control","href":"/backend-nodejs-mongodb/control-structures","docId":"modulo01/control-structures"}],"href":"/backend-nodejs-mongodb/category/modulo-01"},{"type":"category","label":"Modulo 02","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"M\xf3dulos en JavaScript","href":"/backend-nodejs-mongodb/js-modules","docId":"modulo02/index"},{"type":"link","label":"Objetos a fondo","href":"/backend-nodejs-mongodb/objects","docId":"modulo02/objects"},{"type":"link","label":"Arrays","href":"/backend-nodejs-mongodb/arrays","docId":"modulo02/arrays"},{"type":"link","label":"Operadores Rest y Spread","href":"/backend-nodejs-mongodb/rest-spread","docId":"modulo02/dots-operator"},{"type":"link","label":"Callbacks y Promesas","href":"/backend-nodejs-mongodb/promises","docId":"modulo02/promises-callbacks"},{"type":"link","label":"Clases","href":"/backend-nodejs-mongodb/classes","docId":"modulo02/classes"}],"href":"/backend-nodejs-mongodb/category/modulo-02"},{"type":"category","label":"Modulo 03","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Node.js","href":"/backend-nodejs-mongodb/node-intro","docId":"modulo03/index"},{"type":"link","label":"M\xf3dulos","href":"/backend-nodejs-mongodb/modules","docId":"modulo03/modules"},{"type":"link","label":"NPM","href":"/backend-nodejs-mongodb/npm","docId":"modulo03/npm"},{"type":"link","label":"JSON","href":"/backend-nodejs-mongodb/json","docId":"modulo03/json"},{"type":"link","label":"Crear una API","href":"/backend-nodejs-mongodb/node-api","docId":"modulo03/api"},{"type":"link","label":"Manipulaci\xf3n de archivos","href":"/backend-nodejs-mongodb/node-files","docId":"modulo03/files"}],"href":"/backend-nodejs-mongodb/category/modulo-03"},{"type":"category","label":"Modulo 04","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introducci\xf3n a Express","href":"/backend-nodejs-mongodb/intro-expressjs","docId":"modulo04/index"},{"type":"link","label":"Enrutamiento","href":"/backend-nodejs-mongodb/routing","docId":"modulo04/routing"},{"type":"link","label":"Middlewares","href":"/backend-nodejs-mongodb/middlewares","docId":"modulo04/middlewares"},{"type":"link","label":"Integraci\xf3n con otros m\xf3dulos","href":"/backend-nodejs-mongodb/integrating-modules","docId":"modulo04/modules"}],"href":"/backend-nodejs-mongodb/category/modulo-04"},{"type":"category","label":"Modulo 05","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Solicitudes HTTP","href":"/backend-nodejs-mongodb/http-requests","docId":"modulo05/index"},{"type":"link","label":"Procesando solicitudes","href":"/backend-nodejs-mongodb/request-processing","docId":"modulo05/request_processing"},{"type":"link","label":"Solicitudes en Express","href":"/backend-nodejs-mongodb/request-express","docId":"modulo05/request_express"},{"type":"link","label":"Buenas pr\xe1cticas","href":"/backend-nodejs-mongodb/best-practices","docId":"modulo05/best_practices"}],"href":"/backend-nodejs-mongodb/category/modulo-05"},{"type":"category","label":"Modulo 06","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Middlewares","href":"/backend-nodejs-mongodb/middlewares-intro","docId":"modulo06/index"},{"type":"link","label":"Middlewares internos","href":"/backend-nodejs-mongodb/built-in-middlewares","docId":"modulo06/interns-midd"},{"type":"link","label":"Personalizando middlewares","href":"/backend-nodejs-mongodb/custom-middlewares","docId":"modulo06/custom-midd"},{"type":"link","label":"Middlewares a nivel de aplicaci\xf3n","href":"/backend-nodejs-mongodb/app-level-middlewares","docId":"modulo06/app-midd"},{"type":"link","label":"Middlewares a nivel de enrutador","href":"/backend-nodejs-mongodb/router-level-middlewares","docId":"modulo06/router-midd"},{"type":"link","label":"Middlewares a nivel de ruta","href":"/backend-nodejs-mongodb/route-level-middleware","docId":"modulo06/route-midd"},{"type":"link","label":"Orden de ejecuci\xf3n","href":"/backend-nodejs-mongodb/order-execution","docId":"modulo06/midd-order"}],"href":"/backend-nodejs-mongodb/category/modulo-06"},{"type":"category","label":"Modulo 07","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introducci\xf3n a MongoDB","href":"/backend-nodejs-mongodb/mongodb-intro","docId":"modulo07/index"},{"type":"link","label":"Conceptos b\xe1sicos","href":"/backend-nodejs-mongodb/mongodb-basics","docId":"modulo07/basics"},{"type":"link","label":"Configuraci\xf3n","href":"/backend-nodejs-mongodb/mongodb-setup","docId":"modulo07/setting_up"}],"href":"/backend-nodejs-mongodb/category/modulo-07"},{"type":"category","label":"Modulo 08","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"index","href":"/backend-nodejs-mongodb/modulo08/","docId":"modulo08/index"}],"href":"/backend-nodejs-mongodb/category/modulo-08"},{"type":"category","label":"Proyecto Final","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"index","href":"/backend-nodejs-mongodb/final-project/","docId":"final-project/index"}],"href":"/backend-nodejs-mongodb/category/proyecto-final"}]},"docs":{"final-project/index":{"id":"final-project/index","title":"index","description":"","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Backend NodeJS y MongoDB","description":"Bienvenido a este peque\xf1o curso donde aprenderemos conceptos fundamentales en el desarrollo web orientado al backend, utilizando NodeJS y MongoDB.","sidebar":"tutorialSidebar"},"modulo01/control-structures":{"id":"modulo01/control-structures","title":"Estructuras de control","description":"Estructuras que nos permiten realizar acciones condicionales o repetitivas","sidebar":"tutorialSidebar"},"modulo01/data-types":{"id":"modulo01/data-types","title":"Tipos de datos","description":"number, String, Boolean, null, undefined, Symbol, BigInt","sidebar":"tutorialSidebar"},"modulo01/functions":{"id":"modulo01/functions","title":"Funciones","description":"Pedazos de c\xf3digo que podemos reutilizar","sidebar":"tutorialSidebar"},"modulo01/index":{"id":"modulo01/index","title":"Introducci\xf3n a Javascript","description":"Esta es una introducci\xf3n a Javascript, el lenguaje de programaci\xf3n que se ejecuta en el navegador y en el servidor.","sidebar":"tutorialSidebar"},"modulo01/operators":{"id":"modulo01/operators","title":"Operadores","description":"Aritm\xe9ticos, L\xf3gicos, a nivel de bit (bitwise), etc","sidebar":"tutorialSidebar"},"modulo01/variables":{"id":"modulo01/variables","title":"Variables","description":"Descubriendo las variables en Javascript","sidebar":"tutorialSidebar"},"modulo02/arrays":{"id":"modulo02/arrays","title":"Arrays","description":"Los arrays o arreglos son objetos en Javascript que nos permiten almacenar una colecci\xf3n de datos. Cada dato almacenado en un array tiene un \xedndice que nos permite acceder a \xe9l. Al ser objetos, los arrays tienen propiedades y m\xe9todos.","sidebar":"tutorialSidebar"},"modulo02/classes":{"id":"modulo02/classes","title":"Clases","description":"Las clases y objetos son parte de la programaci\xf3n orientada a objetos. En javascript las clases se agregaron en la versi\xf3n ES6, y antes de eso se usaban las funciones constructoras para crear objetos.","sidebar":"tutorialSidebar"},"modulo02/dots-operator":{"id":"modulo02/dots-operator","title":"Operadores Rest y Spread","description":"Estos operadores nos permiten trabajar con arrays y objetos de una manera m\xe1s sencilla. Ambos hacen uso de la sintaxis de puntos ..., sin embargo tienen un significado diferente.","sidebar":"tutorialSidebar"},"modulo02/index":{"id":"modulo02/index","title":"M\xf3dulos en JavaScript","description":"A medida que nuetra aplicaci\xf3n va creciendo, es necesario dividir el c\xf3digo en m\xf3dulos para poder mantenerlo organizado y f\xe1cil de entender. Los m\xf3dulos en Javascript aparecieron en el est\xe1ndar ES6, y son una forma de dividir el c\xf3digo en archivos independientes que pueden ser importados y exportados.","sidebar":"tutorialSidebar"},"modulo02/objects":{"id":"modulo02/objects","title":"Objetos a fondo","description":"En la sesi\xf3n 01 vimos un poco acerca de los objetos en Javascript. En esta sesion vamos a ampliar esos conocimientos, para enterderlos mejor.","sidebar":"tutorialSidebar"},"modulo02/promises-callbacks":{"id":"modulo02/promises-callbacks","title":"Callbacks y Promesas","description":"As\xedncronismo","sidebar":"tutorialSidebar"},"modulo03/api":{"id":"modulo03/api","title":"Crear una API","description":"Como vimos, Node.js nos permite ejecutar c\xf3digo JavaScript en el servidor. Esto nos permite crear aplicaciones web y APIs que pueden ser ejecutadas en el servidor. En esta parte veremos como podemos crear una peque\xf1a API usando Node.js puro (sin frameworks).","sidebar":"tutorialSidebar"},"modulo03/files":{"id":"modulo03/files","title":"Manipulaci\xf3n de archivos","description":"La manipulaci\xf3n de archivos es una tarea com\xfan en la programaci\xf3n, y Node.js proporciona un conjunto completo de API para trabajar con archivos y directorios. En este art\xedculo, exploraremos c\xf3mo trabajar con archivos en Node.js, incluyendo la creaci\xf3n, lectura, escritura y eliminaci\xf3n de archivos.","sidebar":"tutorialSidebar"},"modulo03/index":{"id":"modulo03/index","title":"Node.js","description":"\xbfQu\xe9 es Node.js?","sidebar":"tutorialSidebar"},"modulo03/json":{"id":"modulo03/json","title":"JSON","description":"JSON es un formato de intercambio de datos que utiliza una sintaxis basada en JavaScript. Fue dise\xf1ado para ser f\xe1cil de leer y escribir, y para ser utilizado en aplicaciones web y m\xf3viles. JSON es un formato de texto plano, lo que lo hace f\xe1cil de transmitir a trav\xe9s de la red.","sidebar":"tutorialSidebar"},"modulo03/modules":{"id":"modulo03/modules","title":"M\xf3dulos","description":"En Node.js, los m\xf3dulos son bloques de c\xf3digo reutilizable que encapsulan la funcionalidad espec\xedfica de un programa. Los m\xf3dulos permiten a los desarrolladores escribir c\xf3digo modular y escalable, lo que facilita el mantenimiento y la extensi\xf3n del c\xf3digo a medida que el proyecto crece.","sidebar":"tutorialSidebar"},"modulo03/npm":{"id":"modulo03/npm","title":"NPM","description":"\xbfQu\xe9 es NPM?","sidebar":"tutorialSidebar"},"modulo04/index":{"id":"modulo04/index","title":"Introducci\xf3n a Express","description":"\xbfQu\xe9 es Express?","sidebar":"tutorialSidebar"},"modulo04/middlewares":{"id":"modulo04/middlewares","title":"Middlewares","description":"En Express.js, los middlewares son funciones que se ejecutan en el medio de una cadena de manejo de solicitudes HTTP. Los middlewares se utilizan para realizar tareas espec\xedficas en la solicitud, como analizar el cuerpo de la solicitud, realizar la autenticaci\xf3n del usuario y m\xe1s.","sidebar":"tutorialSidebar"},"modulo04/modules":{"id":"modulo04/modules","title":"Integraci\xf3n con otros m\xf3dulos","description":"Instalaci\xf3n de m\xf3dulos en Express.js","sidebar":"tutorialSidebar"},"modulo04/routing":{"id":"modulo04/routing","title":"Enrutamiento","description":"El enrutamiento en Express.js se refiere a la definici\xf3n de rutas que corresponden a diferentes solicitudes HTTP (GET, POST, PUT, DELETE, etc.).","sidebar":"tutorialSidebar"},"modulo05/best_practices":{"id":"modulo05/best_practices","title":"Buenas pr\xe1cticas","description":"La gesti\xf3n adecuada de solicitudes HTTP es esencial para garantizar el rendimiento y la seguridad de una aplicaci\xf3n web. A continuaci\xf3n, se presentan algunas mejores pr\xe1cticas para la gesti\xf3n de solicitudes HTTP que deben tenerse en cuenta al desarrollar una aplicaci\xf3n web.","sidebar":"tutorialSidebar"},"modulo05/index":{"id":"modulo05/index","title":"Solicitudes HTTP","description":"El protocolo de transferencia de hipertexto (HTTP) es un protocolo de comunicaci\xf3n utilizado en la web para transferir datos entre el cliente y el servidor. Las solicitudes HTTP son una parte fundamental de este proceso, ya que permiten a los clientes enviar informaci\xf3n al servidor para su procesamiento.","sidebar":"tutorialSidebar"},"modulo05/request_express":{"id":"modulo05/request_express","title":"Solicitudes en Express","description":"Uso de enrutadores en Express","sidebar":"tutorialSidebar"},"modulo05/request_processing":{"id":"modulo05/request_processing","title":"Procesando solicitudes","description":"Una vez que un cliente ha enviado una solicitud HTTP al servidor, este debe procesarla para determinar la respuesta apropiada. En este art\xedculo, discutiremos c\xf3mo se procesan las solicitudes HTTP en el servidor, incluyendo la forma en que se analizan, las decisiones que se toman en funci\xf3n de la informaci\xf3n de la solicitud y c\xf3mo se generan las respuestas HTTP correspondientes.","sidebar":"tutorialSidebar"},"modulo06/app-midd":{"id":"modulo06/app-midd","title":"Middlewares a nivel de aplicaci\xf3n","description":"En Express, los middlewares tambi\xe9n se pueden aplicar a nivel de aplicaci\xf3n. Esto significa que el middleware se ejecutar\xe1 para todas las solicitudes que lleguen a la aplicaci\xf3n, independientemente de la ruta especificada.","sidebar":"tutorialSidebar"},"modulo06/custom-midd":{"id":"modulo06/custom-midd","title":"Personalizando middlewares","description":"En Express.js, un middleware es simplemente una funci\xf3n que tiene acceso al objeto request (req), al objeto response (res) y al siguiente middleware en la cadena (generalmente llamado next()). Los middlewares se utilizan para realizar tareas como la validaci\xf3n de datos, la autenticaci\xf3n de usuarios y el manejo de errores.","sidebar":"tutorialSidebar"},"modulo06/index":{"id":"modulo06/index","title":"Middlewares","description":"Express.js es un popular framework de Node.js que se utiliza para crear aplicaciones web y APIs de manera sencilla y r\xe1pida. Una de las caracter\xedsticas m\xe1s poderosas de Express.js son los middlewares, que permiten interceptar y manipular las solicitudes y respuestas HTTP de una aplicaci\xf3n.","sidebar":"tutorialSidebar"},"modulo06/interns-midd":{"id":"modulo06/interns-midd","title":"Middlewares internos","description":"Express.js proporciona varios middlewares internos que se pueden utilizar para a\xf1adir funcionalidades adicionales a una aplicaci\xf3n. Estos middlewares est\xe1n disponibles a trav\xe9s de la funci\xf3n app.use() y se pueden aplicar a nivel de aplicaci\xf3n, de enrutador o de ruta.","sidebar":"tutorialSidebar"},"modulo06/midd-order":{"id":"modulo06/midd-order","title":"Orden de ejecuci\xf3n","description":"Los middlewares en Express son funciones que se ejecutan en el ciclo de vida de una solicitud HTTP. Es importante comprender el orden en que se ejecutan los middlewares, ya que puede afectar el comportamiento de nuestra aplicaci\xf3n.","sidebar":"tutorialSidebar"},"modulo06/route-midd":{"id":"modulo06/route-midd","title":"Middlewares a nivel de ruta","description":"Adem\xe1s de poder aplicar middlewares a nivel de aplicaci\xf3n y a nivel de enrutador, tambi\xe9n es posible aplicarlos a nivel de ruta. Esto nos permite definir un middleware espec\xedfico para una ruta determinada.","sidebar":"tutorialSidebar"},"modulo06/router-midd":{"id":"modulo06/router-midd","title":"Middlewares a nivel de enrutador","description":"En Express.js, los middlewares se pueden aplicar no solo a nivel de aplicaci\xf3n, sino tambi\xe9n a nivel de enrutador. Esto significa que se pueden aplicar middlewares espec\xedficos para un conjunto de rutas o enrutadores en lugar de aplicarlos a todas las solicitudes entrantes.","sidebar":"tutorialSidebar"},"modulo07/basics":{"id":"modulo07/basics","title":"Conceptos b\xe1sicos","description":"Documentos","sidebar":"tutorialSidebar"},"modulo07/index":{"id":"modulo07/index","title":"Introducci\xf3n a MongoDB","description":"MongoDB es una base de datos NoSQL orientada a documentos. Esto significa que los datos se almacenan en documentos, que son objetos JSON. En lugar de guardar los datos en tablas como se hace en las bases de datos relacionales, MongoDB guarda estructuras de datos BSON (una especificaci\xf3n similar a JSON) con un esquema din\xe1mico, haciendo que la integraci\xf3n de los datos en ciertas aplicaciones sea m\xe1s f\xe1cil y r\xe1pida.","sidebar":"tutorialSidebar"},"modulo07/setting_up":{"id":"modulo07/setting_up","title":"Configuraci\xf3n","description":"En esta parte del curso vamos a ver como podemos configurar un entorno para poder realizar algunas operaciones b\xe1sicas en MongoDB, para ello vamos a usar Mongo Atlas y MongoDB Compass.","sidebar":"tutorialSidebar"},"modulo08/index":{"id":"modulo08/index","title":"index","description":"","sidebar":"tutorialSidebar"},"tools":{"id":"tools","title":"Herramientas","description":"Durante el transcurso del curso haremos uso de algunas herramientas que nos permitir\xe1n hacer m\xe1s f\xe1cil el desarrollo de las aplicaciones.","sidebar":"tutorialSidebar"}}}')}}]);