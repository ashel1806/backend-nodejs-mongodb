"use strict";(self.webpackChunkaprendiendo_js=self.webpackChunkaprendiendo_js||[]).push([[940],{3905:(e,n,o)=>{o.d(n,{Zo:()=>d,kt:()=>f});var a=o(7294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function t(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,a)}return o}function l(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?t(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function i(e,n){if(null==e)return{};var o,a,r=function(e,n){if(null==e)return{};var o,a,r={},t=Object.keys(e);for(a=0;a<t.length;a++)o=t[a],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(a=0;a<t.length;a++)o=t[a],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),o=n;return e&&(o="function"==typeof e?e(n):l(l({},n),e)),o},d=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var o=e.components,r=e.mdxType,t=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(o),c=r,f=p["".concat(s,".").concat(c)]||p[c]||m[c]||t;return o?a.createElement(f,l(l({ref:n},d),{},{components:o})):a.createElement(f,l({ref:n},d))}));function f(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var t=o.length,l=new Array(t);l[0]=c;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<t;u++)l[u]=o[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,o)}c.displayName="MDXCreateElement"},4991:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>t,metadata:()=>i,toc:()=>u});var a=o(7462),r=(o(7294),o(3905));const t={title:"M\xf3dulos",slug:"/modules",sidebar_position:2},l=void 0,i={unversionedId:"modulo03/modules",id:"modulo03/modules",title:"M\xf3dulos",description:"En Node.js, los m\xf3dulos son bloques de c\xf3digo reutilizable que encapsulan la funcionalidad espec\xedfica de un programa. Los m\xf3dulos permiten a los desarrolladores escribir c\xf3digo modular y escalable, lo que facilita el mantenimiento y la extensi\xf3n del c\xf3digo a medida que el proyecto crece.",source:"@site/docs/modulo03/modules.md",sourceDirName:"modulo03",slug:"/modules",permalink:"/backend-nodejs-mongodb/modules",draft:!1,editUrl:"https://github.com/ashel1806/backend-nodejs-mongodb.git/docs/modulo03/modules.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"M\xf3dulos",slug:"/modules",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Node.js",permalink:"/backend-nodejs-mongodb/node-intro"},next:{title:"NPM",permalink:"/backend-nodejs-mongodb/npm"}},s={},u=[{value:"\xbfC\xf3mo funcionan los m\xf3dulos en Node.js?",id:"c\xf3mo-funcionan-los-m\xf3dulos-en-nodejs",level:2},{value:"Creaci\xf3n de m\xf3dulos en Node.js",id:"creaci\xf3n-de-m\xf3dulos-en-nodejs",level:2},{value:"Importar m\xf3dulos",id:"importar-m\xf3dulos",level:2},{value:"Exportar m\xf3dulos",id:"exportar-m\xf3dulos",level:2}],d={toc:u},p="wrapper";function m(e){let{components:n,...o}=e;return(0,r.kt)(p,(0,a.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"En Node.js, los m\xf3dulos son bloques de c\xf3digo reutilizable que encapsulan la funcionalidad espec\xedfica de un programa. Los m\xf3dulos permiten a los desarrolladores escribir c\xf3digo modular y escalable, lo que facilita el mantenimiento y la extensi\xf3n del c\xf3digo a medida que el proyecto crece."),(0,r.kt)("h2",{id:"c\xf3mo-funcionan-los-m\xf3dulos-en-nodejs"},"\xbfC\xf3mo funcionan los m\xf3dulos en Node.js?"),(0,r.kt)("p",null,"En Node.js, los m\xf3dulos se implementan como archivos JavaScript separados que encapsulan una funcionalidad espec\xedfica. Cada archivo de m\xf3dulo tiene su propio \xe1mbito local y solo expone una interfaz p\xfablica espec\xedfica a otros m\xf3dulos o al c\xf3digo del programa principal."),(0,r.kt)("p",null,"Los m\xf3dulos en Node.js se pueden importar y exportar utilizando la sintaxis require y ",(0,r.kt)("inlineCode",{parentName:"p"},"module.exports"),", respectivamente. La funci\xf3n require se utiliza para cargar un m\xf3dulo en un archivo JavaScript, mientras que ",(0,r.kt)("inlineCode",{parentName:"p"},"module.exports")," se utiliza para definir la interfaz p\xfablica del m\xf3dulo."),(0,r.kt)("h2",{id:"creaci\xf3n-de-m\xf3dulos-en-nodejs"},"Creaci\xf3n de m\xf3dulos en Node.js"),(0,r.kt)("p",null,"Crear un m\xf3dulo en Node.js es tan simple como crear un archivo JavaScript separado que encapsule una funcionalidad espec\xedfica. Para exportar la funcionalidad, debe utilizar la sintaxis module.exports en el archivo."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=ejemplo.js",title:"ejemplo.js"},"function sum(a, b) {\n  return a + b;\n}\n\nmodule.exports = sum;\n")),(0,r.kt)("p",null,"En el ejemplo anterior, se exporta la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"sum")," como la interfaz p\xfablica del m\xf3dulo. Ahora, en otro archivo JavaScript, puede importar este m\xf3dulo y utilizar la funci\xf3n sum exportada:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=index.js",title:"index.js"},"const sum = require('./ejemplo.js');\n\nconsole.log(sum(2, 3)); // 5\n")),(0,r.kt)("p",null,"En el ejemplo anterior, se utiliza la sintaxis ",(0,r.kt)("inlineCode",{parentName:"p"},"require")," para cargar el m\xf3dulo ",(0,r.kt)("inlineCode",{parentName:"p"},"ejemplo.js"),", y la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"sum")," exportada se asigna a la variable ",(0,r.kt)("inlineCode",{parentName:"p"},"sum"),". Luego, se llama a la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"sum")," con dos argumentos y se muestra el resultado en la consola."),(0,r.kt)("h2",{id:"importar-m\xf3dulos"},"Importar m\xf3dulos"),(0,r.kt)("p",null,"Como ya vimos, para importar un m\xf3dulo en Node.js, puede utilizar la sintaxis ",(0,r.kt)("inlineCode",{parentName:"p"},"require"),". La funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"p"},"require")," toma una ruta relativa o absoluta al archivo de m\xf3dulo y devuelve el objeto exportado del m\xf3dulo."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const ejemplo = require('./ejemplo.js');\n")),(0,r.kt)("h2",{id:"exportar-m\xf3dulos"},"Exportar m\xf3dulos"),(0,r.kt)("p",null,"Y, para exportar una funcionalidad espec\xedfica de un m\xf3dulo en Node.js, debe utilizar la sintaxis ",(0,r.kt)("inlineCode",{parentName:"p"},"module.exports"),". La sintaxis ",(0,r.kt)("inlineCode",{parentName:"p"},"module.exports")," se utiliza para definir la interfaz p\xfablica del m\xf3dulo."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function sum(a, b) {\n  return a + b;\n}\n\nmodule.exports = sum;\n")))}m.isMDXComponent=!0}}]);