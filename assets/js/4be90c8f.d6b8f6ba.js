"use strict";(self.webpackChunkaprendiendo_js=self.webpackChunkaprendiendo_js||[]).push([[7790],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>f});var a=n(7294);function t(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,a,t=function(e,r){if(null==e)return{};var n,a,t={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],r.indexOf(n)>=0||(t[n]=e[n]);return t}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var l=a.createContext({}),d=function(e){var r=a.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},u=function(e){var r=d(e.components);return a.createElement(l.Provider,{value:r},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=t,f=p["".concat(l,".").concat(m)]||p[m]||c[m]||o;return n?a.createElement(f,i(i({ref:r},u),{},{components:n})):a.createElement(f,i({ref:r},u))}));function f(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[p]="string"==typeof e?e:t,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8539:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=n(7462),t=(n(7294),n(3905));const o={title:"Middlewares a nivel de enrutador",slug:"/router-level-middlewares",sidebar_position:5},i=void 0,s={unversionedId:"modulo06/router-midd",id:"modulo06/router-midd",title:"Middlewares a nivel de enrutador",description:"En Express.js, los middlewares se pueden aplicar no solo a nivel de aplicaci\xf3n, sino tambi\xe9n a nivel de enrutador. Esto significa que se pueden aplicar middlewares espec\xedficos para un conjunto de rutas o enrutadores en lugar de aplicarlos a todas las solicitudes entrantes.",source:"@site/docs/modulo06/router-midd.md",sourceDirName:"modulo06",slug:"/router-level-middlewares",permalink:"/backend-nodejs-mongodb/router-level-middlewares",draft:!1,editUrl:"https://github.com/ashel1806/backend-nodejs-mongodb/tree/main/docs/modulo06/router-midd.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Middlewares a nivel de enrutador",slug:"/router-level-middlewares",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Middlewares a nivel de aplicaci\xf3n",permalink:"/backend-nodejs-mongodb/app-level-middlewares"},next:{title:"Middlewares a nivel de ruta",permalink:"/backend-nodejs-mongodb/route-level-middleware"}},l={},d=[{value:"\xbfC\xf3mo se aplican?",id:"c\xf3mo-se-aplican",level:2}],u={toc:d},p="wrapper";function c(e){let{components:r,...n}=e;return(0,t.kt)(p,(0,a.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"En Express.js, los middlewares se pueden aplicar no solo a nivel de aplicaci\xf3n, sino tambi\xe9n a nivel de enrutador. Esto significa que se pueden aplicar middlewares espec\xedficos para un conjunto de rutas o enrutadores en lugar de aplicarlos a todas las solicitudes entrantes."),(0,t.kt)("p",null,"Aplicar un middleware a nivel de enrutador significa que se est\xe1 aplicando ese middleware solo a un conjunto espec\xedfico de rutas o enrutadores. Esto permite tener mayor control sobre el flujo de la aplicaci\xf3n y aplicar funcionalidades espec\xedficas en ciertas secciones de la aplicaci\xf3n."),(0,t.kt)("h2",{id:"c\xf3mo-se-aplican"},"\xbfC\xf3mo se aplican?"),(0,t.kt)("p",null,"Para aplicar un middleware a nivel de enrutador en Express, se utiliza el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"router.use()")," en lugar del m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"app.use()"),". El m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"router.use()")," acepta los mismos argumentos que ",(0,t.kt)("inlineCode",{parentName:"p"},"app.use()"),", es decir, una o varias funciones middleware."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="routes/usuarios.js"',title:'"routes/usuarios.js"'},'const express = require("express");\n\n// Creamos el enrutador\nconst router = express.Router();\n\n// Middleware a nivel de enrutador\n\n/* Middleware para validar autenticaci\xf3n */\nrouter.use((req, res, next) => {\n  const token = req.headers.authorization;\n\n  if (!token) {\n    return res\n      .status(401)\n      .json({ error: "No se proporcion\xf3 un token de autenticaci\xf3n" });\n  }\n\n  // Validar el token de autenticaci\xf3n aqu\xed\n\n  next();\n});\n\n/* Middleware para validar par\xe1metros */\nrouter.use("/:id", (req, res, next) => {\n  const { id } = req.params;\n\n  if (!id || !Number.isInteger(parseInt(id))) {\n    return res\n      .status(400)\n      .json({ error: "El par\xe1metro :id debe ser un n\xfamero entero" });\n  }\n\n  // Validar los par\xe1metros aqu\xed\n\n  next();\n});\n\n// Rutas\nrouter.get("/", (req, res) => {\n  // ...\n});\n\nrouter.post("/", (req, res) => {\n  // ...\n});\n\nmodule.exports = router;\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="app.js"',title:'"app.js"'},'const express = require("express");\nconst usuariosRouter = require("./routes/usuarios");\n\nconst app = express();\n\n// Middleware a nivel de aplicaci\xf3n\napp.use(express.json());\n\n// Enrutador de usuarios\napp.use("/usuarios", usuariosRouter);\n\napp.listen(3000, () => {\n  console.log("Servidor iniciado en el puerto 3000");\n});\n')),(0,t.kt)("p",null,"En este ejemplo, se han creado dos middlewares a nivel de enrutador para el enrutador de ",(0,t.kt)("inlineCode",{parentName:"p"},"usuarios"),". El middleware de autenticaci\xf3n verifica que se haya proporcionado un token de autenticaci\xf3n en la solicitud y, si no se proporcion\xf3, devuelve una respuesta con un error de autorizaci\xf3n. El middleware de validaci\xf3n de par\xe1metros verifica que el par\xe1metro ",(0,t.kt)("inlineCode",{parentName:"p"},":id")," en la solicitud sea un n\xfamero entero, y si no lo es, devuelve una respuesta con un error de validaci\xf3n."))}c.isMDXComponent=!0}}]);