"use strict";(self.webpackChunkaprendiendo_js=self.webpackChunkaprendiendo_js||[]).push([[1964],{3905:(e,a,o)=>{o.d(a,{Zo:()=>c,kt:()=>g});var n=o(7294);function t(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function s(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?s(Object(o),!0).forEach((function(a){t(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function r(e,a){if(null==e)return{};var o,n,t=function(e,a){if(null==e)return{};var o,n,t={},s=Object.keys(e);for(n=0;n<s.length;n++)o=s[n],a.indexOf(o)>=0||(t[o]=e[o]);return t}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)o=s[n],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var d=n.createContext({}),l=function(e){var a=n.useContext(d),o=a;return e&&(o="function"==typeof e?e(a):i(i({},a),e)),o},c=function(e){var a=l(e.components);return n.createElement(d.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var o=e.components,t=e.mdxType,s=e.originalType,d=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),p=l(o),m=t,g=p["".concat(d,".").concat(m)]||p[m]||u[m]||s;return o?n.createElement(g,i(i({ref:a},c),{},{components:o})):n.createElement(g,i({ref:a},c))}));function g(e,a){var o=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var s=o.length,i=new Array(s);i[0]=m;var r={};for(var d in a)hasOwnProperty.call(a,d)&&(r[d]=a[d]);r.originalType=e,r[p]="string"==typeof e?e:t,i[1]=r;for(var l=2;l<s;l++)i[l]=o[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},1161:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var n=o(7462),t=(o(7294),o(3905));const s={title:"Conceptos b\xe1sicos",slug:"/mongodb-basics",sidebar_position:2},i=void 0,r={unversionedId:"modulo07/basics",id:"modulo07/basics",title:"Conceptos b\xe1sicos",description:"Documentos",source:"@site/docs/modulo07/basics.md",sourceDirName:"modulo07",slug:"/mongodb-basics",permalink:"/backend-nodejs-mongodb/mongodb-basics",draft:!1,editUrl:"https://github.com/ashel1806/backend-nodejs-mongodb/tree/main/docs/modulo07/basics.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Conceptos b\xe1sicos",slug:"/mongodb-basics",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introducci\xf3n a MongoDB",permalink:"/backend-nodejs-mongodb/mongodb-intro"},next:{title:"Configuraci\xf3n",permalink:"/backend-nodejs-mongodb/mongodb-setup"}},d={},l=[{value:"Documentos",id:"documentos",level:2},{value:"Flexibilidad del esquema",id:"flexibilidad-del-esquema",level:3},{value:"Operaciones CRUD",id:"operaciones-crud",level:3},{value:"Tipos de datos",id:"tipos-de-datos",level:2},{value:"Tipos de datos b\xe1sicos",id:"tipos-de-datos-b\xe1sicos",level:3},{value:"Tipos de datos adicionales",id:"tipos-de-datos-adicionales",level:3},{value:"Tipos de datos geo-espaciales",id:"tipos-de-datos-geo-espaciales",level:3},{value:"Identificadores \xfanicos",id:"identificadores-\xfanicos",level:2}],c={toc:l},p="wrapper";function u(e){let{components:a,...o}=e;return(0,t.kt)(p,(0,n.Z)({},c,o,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h2",{id:"documentos"},"Documentos"),(0,t.kt)("p",null,"MongoDB almacena los datos en documentos BSON (Binary JSON) que siguen el formato JSON. Cada documento es una unidad individual que contiene un conjunto de campos con sus respectivos valores. Los documentos se agrupan en colecciones, que son conjuntos l\xf3gicos de documentos relacionados."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "_id": ObjectId("615b01be86e36a7af996e3a5"),\n  "nombre": "Juan",\n  "edad": 30,\n  "ciudad": "Barcelona",\n  "intereses": ["programaci\xf3n", "viajes", "fotograf\xeda"]\n}\n')),(0,t.kt)("p",null,"En este caso, ",(0,t.kt)("inlineCode",{parentName:"p"},"_id")," es un campo especial que act\xfaa como identificador \xfanico para el documento."),(0,t.kt)("h3",{id:"flexibilidad-del-esquema"},"Flexibilidad del esquema"),(0,t.kt)("p",null,"Una de las ventajas clave de MongoDB es su esquema flexible. A diferencia de las bases de datos relacionales, en las que se requiere un esquema predefinido y r\xedgido, MongoDB permite que los documentos dentro de una colecci\xf3n tengan estructuras diferentes. Esto significa que no todos los documentos en una colecci\xf3n necesitan tener los mismos campos."),(0,t.kt)("p",null,"La flexibilidad del esquema en MongoDB permite una f\xe1cil evoluci\xf3n y adaptaci\xf3n de la base de datos a medida que los requisitos cambian con el tiempo. Los documentos pueden ser modificados y enriquecidos sin requerir alteraciones costosas en el esquema de la base de datos."),(0,t.kt)("h3",{id:"operaciones-crud"},"Operaciones CRUD"),(0,t.kt)("p",null,"MongoDB proporciona una variedad de operaciones para interactuar con los documentos almacenados:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Inserci\xf3n"),": Se pueden insertar nuevos documentos en una colecci\xf3n utilizando el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"insertOne")," o ",(0,t.kt)("inlineCode",{parentName:"p"},"insertMany"),", seg\xfan se inserte un solo documento o m\xfaltiples documentos a la vez.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Consulta"),": La operaci\xf3n de consulta se realiza utilizando el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"find"),", que permite buscar documentos que cumplan ciertos criterios. Es posible especificar filtros y condiciones de b\xfasqueda para obtener los resultados deseados.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Actualizaci\xf3n"),": MongoDB proporciona varias operaciones de actualizaci\xf3n, como ",(0,t.kt)("inlineCode",{parentName:"p"},"updateOne")," y ",(0,t.kt)("inlineCode",{parentName:"p"},"updateMany"),", para modificar documentos existentes. Se pueden actualizar campos espec\xedficos, agregar nuevos campos o incluso reemplazar todo el documento.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Eliminaci\xf3n"),": La eliminaci\xf3n de documentos se realiza utilizando el comando ",(0,t.kt)("inlineCode",{parentName:"p"},"deleteOne")," o ",(0,t.kt)("inlineCode",{parentName:"p"},"deleteMany"),", seg\xfan se elimine un documento o varios documentos que cumplan ciertos criterios."))),(0,t.kt)("p",null,"Estas operaciones b\xe1sicas ofrecen una amplia gama de posibilidades para manipular y trabajar con documentos en MongoDB."),(0,t.kt)("h2",{id:"tipos-de-datos"},"Tipos de datos"),(0,t.kt)("h3",{id:"tipos-de-datos-b\xe1sicos"},"Tipos de datos b\xe1sicos"),(0,t.kt)("p",null,"MongoDB ofrece una variedad de tipos de datos b\xe1sicos para representar informaci\xf3n en tus documentos:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Cadenas de texto"),": Utilizadas para almacenar valores alfanum\xe9ricos, como nombres, direcciones o descripciones. Se representan como cadenas de caracteres UTF-8 y pueden tener una longitud m\xe1xima de 16 MB.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"N\xfameros"),": MongoDB admite varios tipos num\xe9ricos, incluyendo enteros de 32 bits (int), enteros de 64 bits (long), n\xfameros de punto flotante de 64 bits (double), y n\xfameros de punto flotante de precisi\xf3n decimal (decimal).")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Booleanos"),": Representan los valores l\xf3gicos de verdadero (true) o falso (false). Son \xfatiles para evaluar condiciones o expresar estados binarios.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Fechas"),": Los valores de fecha y hora se almacenan como objetos Date en MongoDB. Estos objetos permiten representar y manipular fechas y horarios de forma eficiente.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Arreglos"),": Los arreglos en MongoDB contienen una secuencia ordenada de elementos. Pueden contener valores de diferentes tipos, como cadenas de texto, n\xfameros o incluso otros documentos BSON. Los arreglos son \xfatiles para representar listas o colecciones de elementos relacionados.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Documentos anidados"),": Los documentos en MongoDB pueden anidarse unos dentro de otros, lo que permite una estructura de datos jer\xe1rquica. Puedes representar objetos complejos con m\xfaltiples niveles de anidamiento y relaciones entre ellos."))),(0,t.kt)("h3",{id:"tipos-de-datos-adicionales"},"Tipos de datos adicionales"),(0,t.kt)("p",null,"Adem\xe1s de los tipos de datos b\xe1sicos, MongoDB ofrece otros tipos de datos adicionales que brindan funcionalidades espec\xedficas:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"ObjectId"),": Es un tipo especial de identificador \xfanico de 12 bytes generado por MongoDB. Se utiliza como valor predeterminado para el campo _id en cada documento. Los ObjectId son \xfatiles para garantizar la unicidad de los documentos y facilitar la indexaci\xf3n y b\xfasqueda eficiente.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"BinData"),": Permite almacenar datos binarios, como im\xe1genes o archivos, dentro de un documento BSON. Puedes especificar el subtipo de BinData para indicar el formato o contenido espec\xedfico del dato binario.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Null"),": Representa la ausencia de valor. Puedes utilizar el valor null en un campo para indicar que no hay un valor v\xe1lido presente.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Regex"),": MongoDB admite expresiones regulares (Regex) como tipo de dato. Puedes utilizar expresiones regulares para realizar consultas avanzadas y filtrar datos basados en patrones de texto espec\xedficos."))),(0,t.kt)("h3",{id:"tipos-de-datos-geo-espaciales"},"Tipos de datos geo-espaciales"),(0,t.kt)("p",null,"MongoDB tambi\xe9n ofrece tipos de datos especializados para almacenar y consultar informaci\xf3n geoespacial. Estos tipos de datos incluyen:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"GeoPoint"),": Permite representar puntos en un plano bidimensional utilizando coordenadas geogr\xe1ficas (latitud y longitud).")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"GeoJSON"),": Proporciona una estructura de datos est\xe1ndar para representar objetos geoespaciales complejos, como pol\xedgonos, l\xedneas o colecciones de puntos.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"\xcdndices geoespaciales"),": MongoDB ofrece \xedndices especiales para mejorar la eficiencia de las consultas geoespaciales, permitiendo b\xfasquedas r\xe1pidas y cercanas basadas en la ubicaci\xf3n."))),(0,t.kt)("h2",{id:"identificadores-\xfanicos"},"Identificadores \xfanicos"),(0,t.kt)("p",null,"MongoDB utiliza identificadores \xfanicos para garantizar la unicidad de cada documento almacenado. Estos identificadores, conocidos como ObjectIds, son generados autom\xe1ticamente por MongoDB y se utilizan como valores predeterminados para el campo ",(0,t.kt)("inlineCode",{parentName:"p"},"_id")," en cada documento."),(0,t.kt)("p",null,"Un ObjectId es un identificador \xfanico de 12 bytes (24 caracteres hexadecimales) generado por MongoDB. Est\xe1 compuesto por diferentes componentes que garantizan su unicidad:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Timestamp"),": Los primeros 4 bytes del ObjectId representan la marca de tiempo en segundos desde la \xe9poca Unix. Esto permite que los ObjectIds se generen en orden cronol\xf3gico y facilita la indexaci\xf3n y el ordenamiento de los documentos por tiempo de creaci\xf3n.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"ID de la m\xe1quina"),": Los siguientes 3 bytes identifican de manera \xfanica la m\xe1quina o nodo que genera el ObjectId. Esto ayuda a evitar colisiones entre identificadores generados por diferentes instancias de MongoDB en un cl\xfaster o entorno distribuido.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"ID del proceso"),": Los siguientes 2 bytes representan el identificador del proceso que genera el ObjectId. Esto garantiza que los identificadores sean \xfanicos incluso si m\xfaltiples procesos est\xe1n generando documentos simult\xe1neamente.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("strong",{parentName:"p"},"Contador"),": Los \xfaltimos 3 bytes del ObjectId son un contador que se incrementa para cada ObjectId generado en un mismo milisegundo. Esto resuelve las colisiones que podr\xedan ocurrir si se generan m\xfaltiples identificadores en el mismo instante."))),(0,t.kt)("p",null,"Cuando insertas un nuevo documento en una colecci\xf3n de MongoDB sin especificar un valor para el campo ",(0,t.kt)("inlineCode",{parentName:"p"},"_id"),", MongoDB generar\xe1 autom\xe1ticamente un ObjectId \xfanico y lo asignar\xe1 al documento. Este proceso es transparente y no requiere intervenci\xf3n manual."),(0,t.kt)("p",null,"Puedes utilizar ObjectIds para realizar b\xfasquedas y consultas precisas sobre documentos espec\xedficos. Adem\xe1s, MongoDB proporciona operaciones para generar ObjectIds personalizados si necesitas generar identificadores con requisitos espec\xedficos."))}u.isMDXComponent=!0}}]);